<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.2.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">
	<!--<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
       <property name="driverClassName">
          <value>org.logicalcobwebs.proxool.ProxoolDriver</value>
       </property>
       <property name="url">
          <value>proxool.mysql56</value>
       </property>
    </bean>-->
     <!--<bean id="dataSource"-->
            <!--class="com.mchange.v2.c3p0.ComboPooledDataSource" -->
            <!--destroy-method="close">-->
           <!--<property name="driverClass"-->
                             <!--value="oracle.jdbc.driver.OracleDriver" />-->
           <!---->
           <!--<property name="jdbcUrl"-->
                 <!--value="jdbc:oracle:thin:@10.1.1.200:1521:orcl10gserver" />-->
           <!--&lt;!&ndash;   <property value="jdbc:oracle:thin:@10.1.1.109:1521:orcl10gserver" name="jdbcUrl"/> &ndash;&gt;-->
           <!--<property name="user" value="DCGL" />-->
           <!--<property name="password" value="DCGL" />-->
           <!--<property name="maxPoolSize" value="500" />-->
           <!--<property name="minPoolSize" value="20" />-->
           <!--<property name="initialPoolSize" value="5" />-->
           <!--<property name="idleConnectionTestPeriod" value="60" />-->
           <!--<property name="maxIdleTime" value="60" />-->
    <!--</bean>	-->
    <bean id="dataSource"
    class="com.mchange.v2.c3p0.ComboPooledDataSource"
    destroy-method="close">
    <property name="driverClass"
        value="com.mysql.jdbc.Driver" />

    <property name="jdbcUrl"
    value="jdbc:mysql://localhost:3306/MappingoDB0?characterEncoding=utf-8" />
    <property name="user" value="root" />
    <property name="password" value="domea" />
    <property name="maxPoolSize" value="500" />
    <property name="minPoolSize" value="20" />
    <property name="initialPoolSize" value="5" />
    <property name="idleConnectionTestPeriod" value="60" />
    <property name="maxIdleTime" value="60" />
    </bean>
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean" >
       <property name="dataSource" ref="dataSource" />
       <property name="hibernateProperties">
           <props>
                <prop key="hibernate.proxool.existing_pool">false</prop>  
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<prop key="hibernate.current_session_context_class">thread</prop>
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.EhCacheRegionFactory</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop> 
				 <!--  
此处要注意因为proxool自己释放数据库连接比慢,所以要在此给出释放连接的模式,具体几种模式对应的意思,可以Google一下hibernate.connection.release_mode,有很多说明,在此不多说 
 -->  
         
                <prop key="hibernate.connection.release_mode">  
                    auto
                </prop>
               
           </props>
       </property>
       <property name="packagesToScan">
		  <list>
              <value>com.mappingo.application.Business.bus1.POJO</value>
              <value>com.mappingo.application.Business.Base.POJO</value>
              <value>com.mappingo.application.userPermissions.POJO</value>
		  </list>
	   </property>
    </bean>
    <aop:aspectj-autoproxy /><!-- 代理 -->
	<!-- 定义事务管理器 -->
 	<bean id="txManager"  class="org.springframework.orm.hibernate4.HibernateTransactionManager">
  		<property name="sessionFactory" ref="sessionFactory" />
 	</bean>
 	<!-- 申明annotation 加载事务驱动 -->
	<tx:annotation-driven transaction-manager="txManager" proxy-target-class="true"/>
	<tx:advice id="txAdvice" transaction-manager="txManager">
        <tx:attributes>
            <tx:method name="save*" propagation="REQUIRED" />
            <tx:method name="add*" propagation="REQUIRED" />
            <tx:method name="create*" propagation="REQUIRED" />
            <tx:method name="insert*" propagation="REQUIRED" />
            <tx:method name="update*" propagation="REQUIRED" />
            <tx:method name="merge*" propagation="REQUIRED" />
            <tx:method name="del*" propagation="REQUIRED" />
            <tx:method name="remove*" propagation="REQUIRED" />
            <tx:method name="put*" propagation="REQUIRED" />
            <tx:method name="use*" propagation="REQUIRED"/>

            <!--hibernate4必须配置为开启事务 否则 getCurrentSession()获取不到-->
            <tx:method name="get*" propagation="REQUIRED" read-only="true" />
            <tx:method name="count*" propagation="REQUIRED" read-only="true" />

            <tx:method name="find*" propagation="REQUIRED" read-only="true" />
            <tx:method name="list*" propagation="REQUIRED" read-only="true" />

            <tx:method name="*" read-only="true" />
        </tx:attributes>
    </tx:advice>
    <aop:config expose-proxy="true">
        <!-- 只对业务逻辑层实施事务 -->
        <aop:pointcut id="txPointcut" expression="execution(* cn.javass..service..*.*(..))" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>
    </aop:config>
 	<!-- <tx:advice id="txAdvice" transaction-manager="txManager">
	  	<tx:attributes>
	   		<tx:method name="list*" read-only="true" />加事务的方法
	   		<tx:method name="save*" propagation="REQUIRED"/> 事务的生成特性
	   		<tx:method name="delete*" propagation="REQUIRED"/>事务的生成特性
	   		<tx:method name="update*" propagation="REQUIRED"/>事务的生成特性
	  	</tx:attributes>
 	</tx:advice> -->
 	<!-- 事物执行范围
 	<aop:config>
  	<aop:pointcut id="bussinessService" expression="execution(public * com.sshFrame.test.service..*.*(..))" />
  	<aop:advisor pointcut-ref="bussinessService" advice-ref="txAdvice" />
 	</aop:config> -->
	<!-- 自动扫描包 -->
	<context:annotation-config />
 	<context:component-scan base-package="com.mappingo.application" annotation-config="true"/>
</beans>